# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2018-12-18 09:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import easy_thumbnails.fields
import velo.core.models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_auto_20180319_0513'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='choices',
            options={'ordering': ('title',)},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'lietotājs', 'verbose_name_plural': 'lietotāji'},
        ),
        migrations.AlterField(
            model_name='choices',
            name='kind',
            field=models.SmallIntegerField(choices=[(10, 'Velo Zīmols'), (20, 'Nodarbošanās'), (30, 'Kur uzzināja'), (40, 'Pilsēta')]),
        ),
        migrations.AlterField(
            model_name='competition',
            name='kind',
            field=models.SmallIntegerField(choices=[(0, 'Velo'), (1, 'Distanču slēpošana')], default=0),
        ),
        migrations.AlterField(
            model_name='distance',
            name='created',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Izveidots'),
        ),
        migrations.AlterField(
            model_name='distance',
            name='modified',
            field=models.DateTimeField(auto_now=True, verbose_name='Labots'),
        ),
        migrations.AlterField(
            model_name='user',
            name='bike_brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Choices', verbose_name='Velo Zīmols'),
        ),
        migrations.AlterField(
            model_name='user',
            name='birthday',
            field=models.DateField(blank=True, null=True, verbose_name='Dzimšanas diena'),
        ),
        migrations.AlterField(
            model_name='user',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Choices', verbose_name='Pilsēta'),
        ),
        migrations.AlterField(
            model_name='user',
            name='country',
            field=django_countries.fields.CountryField(blank=True, default='LV', max_length=2, null=True, verbose_name='Valsts'),
        ),
        migrations.AlterField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='datums, kad pievienojās'),
        ),
        migrations.AlterField(
            model_name='user',
            name='description',
            field=models.TextField(blank=True, verbose_name='Apraksts'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='E-pasta adrese'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='Vārds'),
        ),
        migrations.AlterField(
            model_name='user',
            name='full_name',
            field=models.CharField(blank=True, max_length=60, verbose_name='Pilns vārds'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='grupas'),
        ),
        migrations.AlterField(
            model_name='user',
            name='image',
            field=easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to=velo.core.models._get_profile_upload_path, verbose_name='Profila bilde'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Norāda vai lietotājs ir aktīvs.', verbose_name='aktīvs'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Norāda vai lietotājs var pieslēgties administratora panelim.', verbose_name='Darbinieka statuss'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Lietotājam ir visas tiesības arī bez to atsevišķas piešķiršanas.', verbose_name='superlietotāja statuss'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='pēdējoreiz pieslēdzies'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='Uzvārds'),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.CharField(max_length=128, verbose_name='parole'),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone_number',
            field=models.CharField(blank=True, max_length=60, verbose_name='Telefona numurs'),
        ),
        migrations.AlterField(
            model_name='user',
            name='send_email',
            field=models.BooleanField(default=True, verbose_name='Sūtīt e-pasta jaunumus'),
        ),
        migrations.AlterField(
            model_name='user',
            name='ssn',
            field=models.CharField(blank=True, max_length=12, verbose_name='Personas kods'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='lietotāja tiesības'),
        ),
    ]
